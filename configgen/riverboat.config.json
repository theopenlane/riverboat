{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/theopenlane/riverboat/config/config.-config",
  "$defs": {
    "[]river.Queue": {
      "items": {
        "$ref": "#/$defs/river.Queue"
      },
      "type": "array"
    },
    "dbxclient.Config": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the dbx client"
        },
        "baseUrl": {
          "type": "string",
          "description": "Base URL for the dbx service"
        },
        "endpoint": {
          "type": "string",
          "description": "Endpoint for the graphql api"
        },
        "debug": {
          "type": "boolean",
          "description": "Enable debug mode"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "jobs.CreateCustomDomainConfig": {
      "properties": {
        "cloudflareApiKey": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "CreateCustomDomainConfig contains the configuration for the worker"
    },
    "jobs.CreateCustomDomainWorker": {
      "properties": {
        "Config": {
          "$ref": "#/$defs/jobs.CreateCustomDomainConfig"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "CreateCustomDomainWorker creates a custom hostname in cloudflare, and creates and updates the records in our system"
    },
    "jobs.DatabaseWorker": {
      "properties": {
        "config": {
          "$ref": "#/$defs/dbxclient.Config",
          "description": "the database configuration"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "DatabaseWorker is a worker to create a dedicated database for an organization"
    },
    "jobs.DeleteCustomDomainConfig": {
      "properties": {
        "cloudflareApiKey": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "DeleteCustomDomainConfig contains the configuration for the example worker"
    },
    "jobs.DeleteCustomDomainWorker": {
      "properties": {
        "Config": {
          "$ref": "#/$defs/jobs.DeleteCustomDomainConfig"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "DeleteCustomDomainWorker delete the custom hostname from cloudflare and updates the records in our system"
    },
    "jobs.EmailConfig": {
      "properties": {
        "devMode": {
          "type": "boolean",
          "description": "enable dev mode"
        },
        "testDir": {
          "type": "string",
          "description": "the directory to use for dev mode"
        },
        "token": {
          "type": "string",
          "description": "the token to use for the email provider"
        },
        "fromEmail": {
          "type": "string",
          "description": "FromEmail is the email address to use as the sender"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "EmailConfig contains the configuration for the email worker"
    },
    "jobs.EmailWorker": {
      "properties": {
        "config": {
          "$ref": "#/$defs/jobs.EmailConfig",
          "description": "the email configuration"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "EmailWorker is a worker to send emails using the resend email provider the config defaults to dev mode, which will write the email to a file using the mock provider a token is required to send emails using the actual resend provider"
    },
    "jobs.ValidateCustomDomainConfig": {
      "properties": {
        "cloudflareApiKey": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "ValidateCustomDomainConfig contains the configuration for the worker"
    },
    "jobs.ValidateCustomDomainWorker": {
      "properties": {
        "Config": {
          "$ref": "#/$defs/jobs.ValidateCustomDomainConfig"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "ValidateCustomDomainWorker checks cloudflare custom domain(s), and updates the status in our system"
    },
    "river.Config": {
      "properties": {
        "databaseHost": {
          "type": "string",
          "description": "DatabaseHost for connecting to the postgres database"
        },
        "queues": {
          "$ref": "#/$defs/[]river.Queue",
          "description": "Queues to be enabled on the server, if not provided, a default queue is created"
        },
        "workers": {
          "$ref": "#/$defs/river.Workers",
          "description": "Workers to be enabled on the server"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Config is the configuration for the river server"
    },
    "river.Queue": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the queue"
        },
        "maxWorkers": {
          "type": "integer",
          "description": "MaxWorkers allotted for the queue"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Queue is the configuration for a queue"
    },
    "river.Workers": {
      "properties": {
        "emailWorker": {
          "$ref": "#/$defs/jobs.EmailWorker",
          "description": "EmailWorker configuration for sending emails"
        },
        "databaseWorker": {
          "$ref": "#/$defs/jobs.DatabaseWorker",
          "description": "DatabaseWorker configuration for creating databases using openlane/dbx"
        },
        "createCustomDomainWorker": {
          "$ref": "#/$defs/jobs.CreateCustomDomainWorker",
          "description": "CreateCustomDomainWorker configuration for creating custom domains"
        },
        "validateCustomDomainWorker": {
          "$ref": "#/$defs/jobs.ValidateCustomDomainWorker",
          "description": "ValidateCustomDomainWorker configuration for validating custom domains"
        },
        "deleteCustomDomainWorker": {
          "$ref": "#/$defs/jobs.DeleteCustomDomainWorker",
          "description": "DeleteCustomDomainWorker configuration for deleting custom domains"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Workers that will be enabled on the server"
    }
  },
  "properties": {
    "refreshInterval": {
      "type": "integer"
    },
    "river": {
      "$ref": "#/$defs/river.Config"
    }
  },
  "additionalProperties": false,
  "type": "object"
}